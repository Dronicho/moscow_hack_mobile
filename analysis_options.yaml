include: package:flutter_lints/flutter.yaml

analyzer:
  errors:
    invalid_annotation_target: ignore
  plugins:
    - dart_code_metrics
  exclude:
    - "**/swagger_generated_code/**"
    - "android/**"
    - "ios/**"
    - "lib/generated/**"
    - "**/*.g.dart"
    - "**/*.gr.dart"
    - "**/*.freezed.dart"
    - "**/*.gen.dart"
    - "**/*.config.dart"
    - "**/*.moor.dart"
    - "**/*.mocks.dart"
    - "**/*.chopper.dart"

linter:
#   # The lint rules applied to this project can be customized in the
#   # section below to disable rules from the `package:flutter_lints/flutter.yaml`
#   # included above or to enable additional rules. A list of all available lints
#   # and their documentation is published at
#   # https://dart-lang.github.io/linter/lints/index.html.
#   #
#   # Instead of disabling a lint rule for the entire project in the
#   # section below, it can also be suppressed for a single line of code
#   # or a specific dart file by using the `// ignore: name_of_lint` and
#   # `// ignore_for_file: name_of_lint` syntax on the line or in the file
#   # producing the lint.
  rules:
    invalid_annotation_target: false
#     prefer_single_quotes: true # Uncomment to enable the `prefer_single_quotes` rule
#     avoid_print: false
#     constant_identifier_names: false
#     avoid_function_literals_in_foreach_calls: false
#     directives_ordering: true
#     sort_child_properties_last: true
#     sort_constructors_first: true
#     always_declare_return_types: true
# # Additional information about this file can be found at
# # https://dart.dev/guides/language/analysis-options

# # dart_code_metrics:
# #   anti-patterns:
# #     - long-method
# #     - long-parameter-list
# #   metrics:
# #     cyclomatic-complexity: 20
# #     maximum-nesting-level: 5
# #     number-of-parameters: 4
# #     source-lines-of-code: 50
# #   metrics-exclude:
# #     - test/**
# #   rules:
# #     - newline-before-return
# #     - no-boolean-literal-compare
# #     - no-empty-block
# #     - prefer-trailing-comma
# #     - prefer-conditional-expressions
# #     - no-equal-then-else
# #     - avoid-unnecessary-type-casts
# #     - avoid-unused-parameters
# #     - binary-expression-operand-order
# #     - member-ordering:
# #         order:
# #           - constructors
# #           - public-fields
# #           - private-fields
# #           - public-getters
# #           - private-getters
# #           - public-setters
# #           - private-setters
# #           - public-methods
# #           - private-methods
# #     - no-boolean-literal-compare
# #     - no-magic-number
# #     - prefer-first
# #     - prefer-last
# #     - always-remove-listener
# #     - avoid-unnecessary-setstate
# #     - prefer-single-widget-per-file